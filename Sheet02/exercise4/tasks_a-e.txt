########################
# Solution to task (a) #
########################

-std=c++20  (for C++20 standard. However, I do get an error message for c++20
            and need to use c++2a so It wotks on my machine)
-O0         (no optimization)
-g          (for debugging information)
-o          (to name output file)

g++ -g -O0 -std=c++2a -o program program.cpp


########################
# Solution to task (b) #
########################

Add Breakpoint to main function:
> break main()
Breakpoint 1 at 0x55555555529b: file program.cpp, line 28.


which breakpoints are currently set?
> maint info breakpoints 
Num     Type                  Disp Enb Address            What
-8      longjmp master        keep n   0x00007ffff7c1cc90 <__libc_siglongjmp> inf 1
-8.1                               y   0x00007ffff7c1cc90 <__libc_siglongjmp> inf 1
-9      longjmp master        keep n   0x00007ffff7c1cc90 <__libc_siglongjmp> inf 1
-9.1                               y   0x00007ffff7c1cc90 <__libc_siglongjmp> inf 1
-10     longjmp master        keep n   0x00007ffff7c1cc90 <__libc_siglongjmp> inf 1
-10.1                              y   0x00007ffff7c1cc90 <__libc_siglongjmp> inf 1
-11     longjmp master        keep n   0x00007ffff7d099c1 <____longjmp_chk+193> inf 1
-11.1                              y   0x00007ffff7d099c1 <____longjmp_chk+193> inf 1
-12     longjmp master        keep n   0x00007ffff7c1ce37 <__longjmp_cancel+55> inf 1
-12.1                              y   0x00007ffff7c1ce37 <__longjmp_cancel+55> inf 1
-13     longjmp master        keep n   0x00007ffff7c1cda1 <__longjmp+113> inf 1
-13.1                              y   0x00007ffff7c1cda1 <__longjmp+113> inf 1
-14     std::terminate master keep n   0x00007ffff7e763e0 <std::terminate()> inf 1
-14.1                              y   0x00007ffff7e763e0 <std::terminate()> inf 1
1       breakpoint            keep y   0x000055555555529b in main() at program.cpp:28 inf 1
1.1                                y   0x000055555555529b in main() at program.cpp:28 inf 1

> i b //(for info breakpoints does the job aswell but dows not include the 'special breakpoints' generatd from gdb)
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000055555555529b in main() at program.cpp:28

Which local variables does main() function have?
> r  //to go in main() 
> info locals
a = 21845
b = 4294958976
c = 32767

Which threads are currently running?
> info threads 
  Id   Target Id                Frame 
* 1    process 209990 "program" main () at program.cpp:28

What is the current value of the instruction pointer register (rip on x86)?
> i r rip
rip            0x55555555529b      0x55555555529b <main()>




########################
# Solution to task (c) #
########################

> quit
> gdb ./program
> break foo(unsigned int, unsigned int) 
Breakpoint 1 at 0x1209: file program.cpp, line 5.
> r
Starting program: /home/andi/Desktop/C++/sheet02/exercise4/program 
Input first number: 1000               
Input second number: 1000

Print all function arguments:
> info args
a = 0
b = 0

Continue execution up to the next line:
>n

Continue execution until line 11:
> tbreak 11 (or > until 11)
Temporary breakpoint 2 at 0x55555555523b: file program.cpp, line 11.

Print value of e:
> p e
$1 = 2000

Continue execution until the function returns:
> finish



########################
# Solution to task (d) #
########################

> quit
> gdb ./program
> break main()
> r
> call foo(12,34)
$1 = 46

/*
> call foo(1,3)
$2 = 4
> call foo(1,1)
$3 = 2
> print foo(2,2)
$4 = 4

unsigned foo(unsigned a, unsigned b) {
    unsigned c = a ^ b;    // Bitwise XOR
    unsigned d = a & b;    // Bitwise AND
    while (d != 0) {       
        d <<= 1;           //Shift Bits left by 1
        unsigned e = c ^ d;
        d = c & d;
        c = e;
    }
    return c;
}
*/
-> This function adds the unsigned input ints a and b, in a complex way :D.


########################
# Solution to task (e) #
########################


> quit
> gdb ./program
> r


To show the stack:
> bt
#0  main () at program.cpp:28
#1  0x00007ffff7bfe083 in __libc_start_main (main=0x55555555529b <main()>, argc=1, argv=0x7fffffffdf88, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdf78) at ../csu/libc-start.c:308
#2  0x000055555555514e in _start ()



